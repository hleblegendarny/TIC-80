name: Build

on: [push, pull_request]

jobs:

  # === Windows ===
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 16 2019" -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_ALL=ON ..
          cmake --build . --config MinSizeRel --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-windows"
          path: |
            build/bin/tic80.exe
            build/bin/*.dll

      - name: Build Pro
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 16 2019" -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_PRO=On -DBUILD_WITH_ALL=ON ..
          cmake --build . --config MinSizeRel --parallel

  # === Windows MinGW-64 ===
  windows-mingw:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup Mingw
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            base-devel
            git
            gcc

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build
        shell: bash
        run: |
          cd build
          cmake -G "MSYS Makefiles" -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_ALL=ON -DBUILD_WITH_JANET=OFF ..
          cmake --build . --config MinSizeRel --parallel

  # === Android ===
  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false
          local-cache: true

      - name: set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Build
        run: |
          cd build/android
          chmod +x gradlew
          ./gradlew assembleRelease
          cp app/build/outputs/apk/release/app-release.apk tic80.apk

        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-android"
          path: build/android/tic80.apk

  # === HTML ===
  html:
    runs-on: ubuntu-latest

    steps:
      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build lua
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=ON -DTIC80_TARGET=tic80lua .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build ruby
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_RUBY=ON -DTIC80_TARGET=tic80ruby .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build js
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_JS=ON -DTIC80_TARGET=tic80js .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build moon
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_MOON=ON -DTIC80_TARGET=tic80moon .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build fennel
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_FENNEL=ON -DTIC80_TARGET=tic80fennel .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build scheme
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_SCHEME=ON -DTIC80_TARGET=tic80scheme .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build squirrel
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_SQUIRREL=ON -DTIC80_TARGET=tic80squirrel .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build wren
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_WREN=ON -DTIC80_TARGET=tic80wren .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build wasm
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_WASM=ON -DTIC80_TARGET=tic80wasm .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build janet
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_JANET=ON -DTIC80_TARGET=tic80janet .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build python
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_LUA=OFF -DBUILD_WITH_PYTHON=ON -DTIC80_TARGET=tic80python .. --fresh
          cmake --build . --config MinSizeRel --parallel

      - name: Build all
        run: |
          cd build
          emcmake cmake -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_ALL=ON .. --fresh
          cmake --build . --config MinSizeRel --parallel
          cp html/index.html bin/index.html

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-html"
          path: |
            build/bin/*
